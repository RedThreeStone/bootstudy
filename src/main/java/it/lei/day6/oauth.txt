不再是普通security的usernamePasswordAuthenticationFilter而是 ClientCredentialsTokenEndpointFilter
1,先验证client的账号密码
2.先通过账号加载数据库或配置的用户再和用户传入的用户进行匹配
3验证通过返回给providerManager的authentication包含密码,由返回前的另一个filter去掉
4然后开始进入tokenEndPoint,它负责加载客户端信息(这里指我们配置的cilent信息,并不是指用户浏览器那个客户端),结合请求信息创建tokenRequest,将tokenRequst传递给TokenGranter办法token
5,前台得到的返回json其实是DefaultOAuth2AccessToken这个类序列化得到的.
6.TokenGranter分为五种,
ResourceOwnerPasswordTokenGranter ==> password密码模式

AuthorizationCodeTokenGranter ==> authorization_code授权码模式

ClientCredentialsTokenGranter ==> client_credentials客户端模式

ImplicitTokenGranter ==> implicit简化模式

RefreshTokenGranter ==>refresh_token 刷新token专用

7,AuthorizationServerTokenServices默认实现类DefaultTokenServices,它在abstractTokenGranter(默认实现类ClientCredentialsTokenGranter)里被调用,并可以自己判断是创建新的token还是刷新token还是返回已保存的token
简单总结一下AuthorizationServerTokenServices的作用，他提供了创建token，刷新token，获取token的实现。在创建token时，他会调用tokenStore对产生的token和相关信息存储到对应的实现类中，可以是redis，数据库，内存，jwt。

8.Bearer的类别


资源认证
OAuth2AuthenticationProcessingFilter
开始传到这里面的只有一个token字符串 然后OAuth2AuthenticationManager 通过tokenServices 加载该token对应的权限


认证服务器和资源服务器有不同的tokenService接口,但是他们都有一个共同的实现类DefaultTokenServices
public interface ResourceServerTokenServices {


	OAuth2Authentication loadAuthentication(String accessToken) throws AuthenticationException, InvalidTokenException;

	
	OAuth2AccessToken readAccessToken(String accessToken);

}
public interface AuthorizationServerTokenServices {


	OAuth2AccessToken createAccessToken(OAuth2Authentication authentication) throws AuthenticationException;


	OAuth2AccessToken refreshAccessToken(String refreshToken, TokenRequest tokenRequest)
			throws AuthenticationException;

	OAuth2AccessToken getAccessToken(OAuth2Authentication authentication);

}